  
  CREATE DATABASE Libraries
  USE Libraries
 
   CREATE TABLE Library_Branch (
  Branch_ID INT PRIMARY KEY NOT NULL IDENTITY (1,1),
  Branch_Name VARCHAR(50) NOT NULL,
  Branch_Address VARCHAR(50) NOT NULL
 );
 
 
   CREATE TABLE Publisher (
  Publisher_Name VARCHAR(50) PRIMARY KEY NOT NULL,
  Address VARCHAR (50) NOT NULL,
  Phone VARCHAR(50) NOT NULL
 );
 
 
   CREATE TABLE Books (
  Book_ID INT PRIMARY KEY NOT NULL IDENTITY (1,1),
  Title VARCHAR(50) NOT NULL, 
  Publisher_NAME VARCHAR(50) NOT NULL CONSTRAINT fk_Publisher_Name FOREIGN KEY REFERENCES Publisher(Publisher_Name) ON UPDATE CASCADE ON DELETE CASCADE
 );

  CREATE TABLE Borrower (
   Card_No INT Primary Key NOT NULL Identity (100,1),
   Name VARCHAR(50) NOT NULL,
   Address VARCHAR(50) NOT NULL,
   Phone VARCHAR(50) NOT NULL
   );
 
  CREATE TABLE Book_Authors (
  Book_ID INT NOT NULL CONSTRAINT fk_Book_ID FOREIGN KEY REFERENCES Books(Book_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  Author_Name VARCHAR(50) NOT NULL
  
 );
 

   CREATE TABLE Book_Copies(
  Book_ID INT NOT NULL CONSTRAINT fk_Book_ID2 FOREIGN KEY REFERENCES Books(Book_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  Branch_ID INT NOT NULL CONSTRAINT fk_Branch_ID FOREIGN KEY REFERENCES Library_Branch(Branch_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  Number_Of_Copies INT NOT NULL
 
 );

 
   CREATE TABLE Book_Loans (
  Book_ID INT NOT NULL CONSTRAINT fk_Book_ID3 FOREIGN KEY REFERENCES Books(Book_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  Branch_ID INT NOT NULL CONSTRAINT fk_Branch_ID2 FOREIGN KEY REFERENCES Library_Branch(Branch_ID) ON UPDATE CASCADE ON DELETE CASCADE,
  Card_No INT NOT NULL CONSTRAINT fk_Card_No FOREIGN KEY REFERENCES Borrower(Card_No) ON UPDATE CASCADE ON DELETE CASCADE,
  Date_Out VARCHAR(50) NOT NULL,
  Date_Due VARCHAR(50) NOT NULL
 
 );
 
 
 
 
  INSERT INTO Library_Branch
  (Branch_Name, Branch_Address)
  VALUES 
  ('Northside', '121 North Park Rd'),
  ('Southside', '453 South Ridge Ave'),
  ('Westside', '872 Westwood Bvld'),
  ('Central', '999 Central St'),
  ('Sharpstown', '346 Sharpie Sharp Ave')
  ;
  

  INSERT INTO Publisher
  (Publisher_Name, Address, Phone)
  VALUES 
  ('Penguin', '2293 Rio Rd', '555-678-2342'),
  ('Random House', '44 Random Ave Suite B', '673-982-5232'),
  ('Harper Collins', '4871 Ferry St', '517-456-3345'),
  ('Pearson', '123 Orchard Blvd', '698-435-2467'),
  ('Puffin', '4445 Turtle Creek Rd', '352-553-6436'),
  ('Appleson', '9967 Fruit Ave', '987-657-4245'),
  ('Lighthouse', '888 Lichthaus Lane', '787-645-9845'),
  ('Alexandria', '756 Frazier St', '566-326-2458'),
  ('Amber Lotus', '5788 Broadway Ave', '675-345-2364'),
  ('Franklin', '921 Abbey Rd', '356-235-6542'),
  ('Simon & Schuster', '57 Littleville St', '934-543-6542'),
  ('Bloomsbury', '99 Burrberry St', '423-345-2594'),
  ('White Knight Press', '96 Falador Rd', '756-346-3653')
  
  ;
 
  INSERT INTO Books
  (Title, Publisher_Name)
  VALUES 
  ('The Other Boleyn Girl', 'Alexandria'),
  ('The Failed Artist', 'White Knight Press'),
  ('Why Nickelback is the Worst', 'Bloomsbury'),
  ('The Blackest Day', 'Penguin'),
  ('365 Ways to Cook Beets', 'Lighthouse'),
  ('The Lost Tribe', 'Appleson'),
  ('The Graveyard Shift', 'Puffin'),
  ('Where the Wild Things Are', 'Harper Collins'),
  ('Scary Stuff', 'Puffin'),
  ('A Brief History of Cats', 'Amber Lotus'),
  ('Life on Mercury', 'Random House'),
  ('Absolutely True Diary of a Part-Time Indian', 'Simon & Schuster'),
  ('Me Talk Pretty One Day', 'Penguin'),
  ('The Green Mile', 'Puffin'),
  ('Ramona the Pest', 'Lighthouse'),
  ('Freckle Juice', 'Pearson'),
  ('I love Fake Books', 'Appleson'),
  ('Freddie and his Moustache', 'White Knight Press'),
  ('Ellen Foster', 'Franklin'),
  ('Flight', 'Simon & Schuster'),
  ('Lone Ranger and Tonto Fistfight in Heaven', 'Simon & Schuster'),
  ('Naked', 'Penguin'),
  ('The Bluest Eye', 'Random House'),
  ('The Best Around', 'Amber Lotus'),
  ('Brown Bear, Brown Bear', 'Puffin'),
  ('Goodnight Moon', 'Bloomsbury'),
  ('As I Lay Dying', 'Alexandria'),
  ('Beloved', 'Random House'),
  ('The Color Purple', 'Puffin'),
  ('The Sound and the Fury', 'Alexandria'),
     ('The Tempest', 'Pearson'),
  ('Romeo and Juliet', 'Pearson'),
  ('Castle Otranto', 'Penguin')
 
  ;

  
      INSERT INTO Borrower
  (Name, Address, Phone)
  VALUES 
  ('Kathy Phelps', '100 Cannon Place, 97219', '434-296-7478'),
  ('Eric Tsai', '23 Ann Arbor Blvd 45783', '765-435-3456'),
  ('Dale Rousel', '66 Dagwood St', '543-434-3643'),
  ('Kate Murphy', 'Eastview Ave, 53443', '533-523-6594'),
  ('Dan Shore', '2521 SW Luradel St', '232-432-7653'),
  ('Greg Eld', 'St. Andrew Apartments Unit A', '555-324-2345'),
  ('Emma Dixon', '22 NE MLK Blvd', '535-655-7641'),
  ('Kara Vuic', '6739 Bridgewater Park', '675-543-6321'),
  ('Stan Galloway', '996 Hollins St, 21342', '343-532-5420'),
  ('Scott Mason', '33 Bowman Ave', '644-643-6343'),
  ('Walter White', '82 Negro Arroyo Ln', '434-523-4388'),
  ('Jesse Pinkman', '8313 Cook Ave', '234-423-5323'),
  ('Marie Schrader', '57 Parkway St, 32041', '234-432-2139'),
  ('Freddie Mercury', '4328 Garden Lodge, 42981', '342-432-5839');
  
   INSERT INTO Book_Authors
  (Book_ID, Author_Name)
  VALUES 
  ('31', 'William Shakespeare'),
  ('32', 'William Shakespeare'),
  ('23', 'Toni Morrison'),
  ('28', 'Toni Morrison'),
  ('7', 'Steven King'),
  ('14', 'Steven King'),
  ('9', 'Steven King'),
  ('13', 'David Sedaris'),
  ('22', 'David Sedaris'),
  ('12', 'Sherman Alexie'),
  ('20', 'Sherman Alexie'),
  ('21', 'Sherman Alexie'),
  ('29', 'Alice Walker'),
  ('8', 'Maurice Sendak'),
  ('24', 'Bill Martin'),
  ('26', 'Margaret Brown'),
  ('19', 'Kaye Gibbons'),
  ('27', 'William Faulkner'),
  ('30', 'William Faulkner'),
  ('16', 'Judy Blume'),
  ('15', 'Beverly Cleary'),
  ('1', 'Phillipa Gregory'),
  ('33', 'Horace Walpole'),
  ('4', 'Devin Mars'),
  ('6', 'Devin Mars'),
  ('5', 'Tom Moore'),
  ('10', 'Tom Moore'),
  ('3', 'Kristin Murphy'),
  ('12', 'Kristin Murphy'),
  ('11', 'Daniel Lam'),
  ('2', 'Austen Jones'),
  ('17', 'Austen Jones')
  ;

   INSERT INTO Book_Copies
  (Book_ID, Branch_ID, Number_Of_Copies)
  VALUES 
  ('1', '3', '4'),
  ('1', '5', '5'),
  ('2', '1', '2'),
  ('2', '4', '3'),
  ('2', '5', '2'),
  ('3', '2', '5'),
  ('3', '3', '6'),
  ('3', '4', '4'),
  ('4', '1', '4'),
  ('4', '2', '3'),
  ('5', '2', '5'),
  ('5', '4', '7'),
  ('5', '5', '4'),
  ('6', '1', '3'),
  ('6', '5', '3'),
  ('7', '3', '5'),
  ('7', '4', '3'),
  ('7', '5', '4'),
  ('8', '1', '2'),
  ('8', '2', '5'),
     ('8', '3', '7'),
  ('9', '3', '3'),
  ('10', '2', '3'),
  ('10', '4', '3'),
  ('11', '3', '4'),
  ('11', '5', '6'),
  ('12', '5', '6'),
  ('13', '3', '4'),
  ('13', '4', '4'),
  ('13', '5', '3'),
  ('14', '1', '7'),
  ('14', '2', '3'),
  ('14', '4', '5'),
  ('15', '3', '4'),
  ('15', '5', '3'),
  ('16', '1', '3'),
  ('16', '3', '4'),
  ('16', '5', '3'),
  ('17', '1', '8'),
  ('17', '2', '3'),
  ('17', '5', '4'),
  ('18', '3', '2'),
  ('18', '4', '4'),
  ('19', '4', '3'),
  ('19', '5', '4'),
  ('20', '1', '5'),
  ('20', '4', '4'),
  ('20', '5', '3'),
  ('21', '2', '2'),
  ('21', '3', '5'),
  ('22', '3', '5'),
  ('22', '4', '5'),
  ('23', '2', '8'),
  ('23', '4', '2'),
  ('23', '5', '4'),
  ('24', '1', '2'),
  ('24', '5', '3'),
  ('25', '4', '8'),
  ('25', '5', '6'),
  ('26', '2', '4'), 
  ('26', '3', '5'),
  ('27', '3', '2'),
  ('27', '4', '5'),
  ('28', '1', '4'),
  ('28', '5', '3'),
  ('29', '3', '3'), 
  ('29', '4', '4'),
  ('29', '5', '5'),
  ('30', '1', '2'),
  ('30', '3', '4'),
  ('31', '2', '6'),
  ('31', '3', '3'),
  ('31', '4', '5'),
  ('32', '3', '5'),
  ('32', '5', '3'),
  ('33', '1', '3'),
  ('33', '2', '4')
  
  ;
 
 
 
   INSERT INTO Book_Loans
  (Book_ID, Branch_ID, Card_No, Date_Out, Date_Due)
  VALUES 
  ('2', '4',  '104', '8/8/18', '9/3/18'),
  ('19', '3', '113', '7/16/18', '8/1/18'),
  ('9', '1', '110', '8/2/18', '8/22/18'),
  ('13', '2', '102',  '7/29/18', '8/16/18'),
  ('17', '4', '104', '8/1/18', '8/20/18'),
  ('32', '5', '106', '7/30/18', '8/20/18'),
  ('24', '4', '112', '8/9/18', '8/28/18' ),
  ('31', '3', '109', '7/24/18', '8/13/18'),
  ('22', '5', '105', '8/19/18', '9/2/18'),
  ('19', '2', '108', '8/23/18', '9/14/18'),
  ('27', '3', '104', '8/30/18', '9/24/18'),
  ('33', '4', '106', '8/3/18', '8/29/18'),
  ('18', '1', '111', '8/14/18', '9/1/18'),
  ('30', '4', '104', '8/7/18', '8/18/18'),
  ('23', '5', '102', '9/4/18', '9/16/18'),
  ('3', '2', '110', '8/5/18', '8/24/18'),
  ('20', '3', '109', '8/23/18', '9/6/18'),
  ('29', '5', '107', '8/13/18', '9/1/18'),
  ('3', '3', '100', '8/9/18', '8/29/18'),
  ('16', '5', '107', '7/22/18', '8/13/18'),
  ('28', '5', '102', '8/1/18', '8/20/18'),
  ('22', '3', '108', '9/1/18', '9/21/18'),
  ('9', '3', '104', '8/14/18', '9/6/18'),
  ('17', '1', '110', '9/6/18', '9/23/18'),
  ('5', '4', '108', '7/30/18', '8/21/18'),
  ('20', '1', '101', '8/20/18', '9/8/18'),
  ('15', '5', '111', '8/31/18', '9/18/18'),
  ('4', '2', '112', '9/3/18', '9/24/18'),
  ('18', '4', '104', '8/19/18', '9/5/18'),
  ('26', '3', '104', '8/30/18', '9/15/18'),
  ('10', '2', '113', '8/23/18', '9/10/18'),
  ('27', '4', '100', '8/1/18', '8/17/18'),
  ('14', '4', '101', '8/14/18', '8/28/18'),
  ('21', '3', '105', '9/4/18', '9/20/18'),
  ('2', '5', '112', '8/20/18', '9/11/18'),
  ('23', '4', '101', '9/2/18', '9/18/18'),
  ('19', '4', '104', '8/12/18', '8/29/18'),
  ('1', '3', '109', '9/16/18', '9/30/18'),
  ('24', '1', '102', '7/26/18', '8/14/18'),
  ('25', '4', '105', '8/1/18', '8/18/18'),
  ('14', '1', '110', '9/9/18', '9/23/18'),
  ('5', '2', '112', '8/19/18', '9/14/18'),
  ('32', '5', '101', '9/9/18', '9/30/18'),
  ('28', '5', '112', '9/7/18', '9/29/18'),
  ('19', '4', '104', '8/28/18', '9/3/18'),
  ('23', '2', '106', '8/12/18', '8/26/18'),
  ('18', '4', '112', '9/1/18', '9/16/18'),
  ('4', '2', '113', '8/12/18', '8/22/18'),
  ('6', '5', '110', '9/7/18', '9/25/18'),
  ('12', '5', '106', '8/13/18', '8/29/18'),
  ('7', '3', '108', '8/1/18', '8/15/18'),
  ('29', '3', '100', '9/2/18', '9/15/18'),
  ('8', '2', '107', '8/17/18', '9/1/18'),
  ('23', '4', '112', '9/15/18', '9/30/18'),
  ('13', '3', '105', '9/11/18', '9/21/18'),
  ('8', '1', '107', '9/8/18', '9/29/18'),
  ('30', '1', '112', '9/14/18', '9/25/18')
  ;



  
 /*How many copies of the book titled "The Lost Tribe" are owned by the library branch whose name is "Sharpstown"?*/
  
 
   SELECT
  a1.Branch_Name, a2.Number_Of_Copies, a3.Title 
 
  FROM Library_Branch a1
  INNER JOIN Book_Copies a2 ON a2.Branch_ID = a1.Branch_ID
  INNER JOIN Books a3 ON a3.Book_ID = a2.Book_ID
  WHERE Title = 'The Lost Tribe' and Branch_Name = 'Sharpstown'
 ;
 
 
    /*How many copies of the book titled "The Lost Tribe" are owned by each library branch?*/

   SELECT
  a1.Branch_Name, a2.Number_Of_Copies, a3.Title 
 
  FROM Library_Branch a1
  INNER JOIN Book_Copies a2 ON a2.Branch_ID = a1.Branch_ID
  INNER JOIN Books a3 ON a3.Book_ID = a2.Book_ID
  WHERE Title = 'The Lost Tribe' 
 ;

  /*Retrieve the names of all borrowers who do not have any books checked out.*/

     SELECT
    b1.Name
 
    FROM Borrower b1
    LEFT JOIN Book_Loans b2 ON b2.Card_No = b1.Card_No
    WHERE b2.Card_No IS NULL;

 
 /*For each book that is loaned out from the "Sharpstown" branch and whose DueDate is today, retrieve the book title, the borrower's name, and the borrower's address.*/

    SELECT
       a1.Branch_Name, a2.Name, a2.Address, a3.Title
    FROM Library_Branch a1
    INNER JOIN Book_Loans a4 ON a4.Branch_ID = a1.Branch_ID
    INNER JOIN Borrower a2 ON a2.Card_No = a4.Card_No
    INNER JOIN Books a3 ON a3.Book_ID=a4.Book_ID
    WHERE Branch_Name='Sharpstown' and Date_Due='8/20/18'
    ;


    /*For each library branch, retrieve the branch name and the total number of books loaned out from that branch.*/

       SELECT COUNT(a1.Card_No) as Book_Total, a2.Branch_Name
    FROM Book_Loans a1
    INNER JOIN Library_Branch a2 ON a2.Branch_ID=a1.Branch_ID
   
    group by a2.Branch_Name
    ;
    
    
  
   /* Retrieve the names, addresses, and the number of books checked out for all borrowers who have more than five books checked out.*/
    SELECT
    
  a1.Name, a1.Address, Count(a2.Book_Id) as Book_Number
 
  FROM Borrower a1 
  INNER JOIN Book_Loans a2 ON a2.Card_No=a1.Card_No
    group by a1.Name, a1.address
    having count(*)>5
    ;


 /*For each book authored (or co-authored) by "Stephen King", retrieve the title and the number of copies owned by the library branch whose name is "Central".*/

   SELECT
    a1.Title, a2.Number_Of_Copies
 FROM Library_Branch a3
 INNER JOIN Book_Copies a2 ON a2.Branch_ID=a3.Branch_ID
 INNER JOIN Books a1 ON a1.Book_ID=a2.Book_ID
 INNER JOIN Book_Authors a4 ON a4.Book_ID=a1.Book_ID
 WHERE Author_Name='Steven King' and Branch_Name='Central'
 ;
 